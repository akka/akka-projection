# Used for running the local-drone-control as a cluster with several nodes
# through the local.drones.ClusteredMain and a separate PostgreSQL database
include "cluster"
include "grpc"
include "postgres"

local-drone-control.grpc.interface = "127.0.0.1"
akka.remote.artery.canonical.hostname = "127.0.0.1"
akka.management.http.hostname = "127.0.0.1"

local-drone-control {
  nr-of-event-producers = 4
  # unique identifier for the instance of local control, must be known up front by the cloud service
  location-id = "sweden/stockholm/kungsholmen"
  location-id = ${?LOCATION_ID}

  ask-timeout = 3s
}

akka.management.cluster.bootstrap.contact-point-discovery {
  service-name = "local-drone-control"
  discovery-method = config
  # boostrap filters ports with the same IP assuming they are previous instances running on the same node
  # unless a port is specified
  port-name = "management"
  required-contact-point-nr = 1
  # config service discovery never changes
  stable-margin = 1 ms
  # bootstrap without all the nodes being up
  contact-with-all-contact-points = false
}

akka.discovery.config.services {
  "local-drone-control" {
    endpoints = [
      {host = "127.0.0.1", port = 9201}
      {host = "127.0.0.1", port = 9202}
      {host = "127.0.0.1", port = 9203}
    ]
  }
}
