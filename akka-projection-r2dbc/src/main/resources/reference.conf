# This defines the default configuration for akka-projection-r2dbc.
# Make your edits/overrides in your application.conf.

//#projection-config
akka.projection.r2dbc {

  offset-store {
    # set this to your database schema if applicable, empty by default
    schema = ""
    # the database table name for the offset store,
    # can be set to "" if only timestamp offsets are used and table is not created
    offset-table = "akka_projection_offset_store"

    # the database table name for the offset store
    timestamp-offset-table = "akka_projection_timestamp_offset_store"

    # the database table name for the projection manangement data
    management-table = "akka_projection_management"

    # The offset store will keep track of persistence ids and sequence numbers
    # within this time window from latest offset.
    time-window = 5 minutes

    # Backtracking window of the source (query). Should be equal to
    # the akka.persistence.r2dbc.query.backtracking.window that is used for the
    # SourceProvider.
    # It should not be larger than the akka.projection.r2dbc.offset-store.time-window.
    backtracking-window = ${akka.persistence.r2dbc.query.backtracking.window}

    # Remove old entries when older than this duration from the offset store database.
    delete-after = 1 day

    # Remove old entries when older than delete-after from the offset store database
    # with this frequency. Can be disabled with `off`.
    delete-interval = 10 minutes

    # Adopt latest-by-slice entries from other projection keys with this frequency.
    # Can be disabled with `off`.
    adopt-interval = 1 minute

    # Trying to batch insert offsets in batches of this size.
    offset-batch-size = 20
  }

  # By default it shares connection-factory with akka-persistence-r2dbc (write side),
  # i.e. same connection pool. To use a separate pool for projections this can be
  # set to another config path that defines the config based on one of the supported
  # akka-persistence-r2dbc dialects, for example:
  # ```
  #  my-connection-factory = ${akka.persistence.r2dbc.postgres}
  #  my-connection-factory {
  #    host = "myhost.example.com"
  #  }
  #  akka.projection.r2dbc.use-connection-factory = "my-connection-factory"
  #```
  use-connection-factory = "akka.persistence.r2dbc.connection-factory"

  # Logs database calls that take longer than this duration at INFO level.
  # Set to "off" to disable this logging.
  # Set to 0 to log all calls.
  log-db-calls-exceeding = 300 ms

  # Filtered events are not actually filtered but passed through the handling flow
  # for atLeastOnceFlow, in some applications this is fine, set to false to disable
  # the info logged when seeing such filtered events
  warn-about-filtered-events-in-flow = true
}
//#projection-config
